services:
  frontend:
    container_name: hanasand
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000"]
      interval: 5s
      retries: 5

  # Changed approach to not need API or db atm. Left in place in case I change my mind.

  # api:
  #   container_name: hanasand_api
  #   build:
  #     context: .
  #     dockerfile: ./api/Dockerfile
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   ports:
  #     - "${API_PORT:-8080}:8080"
  #   environment:
  #     DB_PASSWORD: ${DB_PASSWORD}
  #     FRONTEND_URL: ${FRONTEND_URL}
  #     CLIENT_ID: ${CLIENT_ID}
  #     CLIENT_SECRET: ${CLIENT_SECRET}
  #     NEXT_PUBLIC_SELF_URL: ${NEXT_PUBLIC_SELF_URL}
  #     OAUTH_TOKEN_URL: ${OAUTH_TOKEN_URL}
  #     OAUTH_BASE_URL: ${OAUTH_BASE_URL}
  #     OAUTH_AUTH_URL: ${OAUTH_AUTH_URL}
  #     DB: ${DB}
  #     DB_USER: ${DB_USER}
  #     DB_HOST: ${DB_HOST}
  #     DB_PORT: ${DB_PORT}
  #     DB_MAX_CONN: ${DB_MAX_CONN}
  #     DB_IDLE_TIMEOUT_MS: ${DB_IDLE_TIMEOUT_MS}
  #     DB_TIMEOUT_MS: ${DB_TIMEOUT_MS}
  #     DEFAULT_RESULTS_PER_PAGE: ${DEFAULT_RESULTS_PER_PAGE}
  #     NEXT_PUBLIC_API: ${NEXT_PUBLIC_API}
  #   healthcheck:
  #     test: ["CMD-SHELL", "[ \"$(cat /tmp/health_status 2>/dev/null)\" = \"healthy\" ] && wget -qO- http://localhost:8080/api || [ \"$(cat /tmp/health_status 2>/dev/null)\" = \"starting\" ]"]
  #     interval: 5s
  #     retries: 5

  # postgres:
  #   image: postgres:15
  #   container_name: hanasand_database
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${DB_USER:-hanasanduser}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_DB: ${DB:-hanasanddb}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  #   ports:
  #     - "${DB_PORT:-5432}:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U hanasanduser -d hanasanddb"]
  #     interval: 5s
  #     retries: 5

# volumes:
#   postgres_data:
