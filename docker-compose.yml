services:
  frontend:
    container_name: hanasand
    restart: always
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file:
      .env
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000"]
      interval: 5s
      retries: 5

  api:
    container_name: hanasand_api
    build:
      context: ./api
      dockerfile: ./Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${API_PORT:-8080}:8080"
    env_file:
      .env
    healthcheck:
      test: ["CMD-SHELL", "[ \"$(cat /tmp/health_status 2>/dev/null)\" = \"healthy\" ] && wget -qO- http://localhost:8080/api || [ \"$(cat /tmp/health_status 2>/dev/null)\" = \"starting\" ]"]
      interval: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: hanasand_database
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-hanasand}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB:-hanasand}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hanasand -d hanasand"]
      interval: 5s
      retries: 5

volumes:
  postgres_data:
